/pom.xml Modified
<dependency>
	<groupId>mysql</groupId>
	<artifactId>mysql-connector-java</artifactId>
</dependency> 

docker run --detach --env MYSQL_ROOT_PASSWORD=dummypassword --env MYSQL_USER=social-media-user --env MYSQL_PASSWORD=dummypassword --env MYSQL_DATABASE=social-media-database --name mysql --publish 3306:3306 mysql:8-oracle
mysqlsh commands
mysqlsh
\connect social-media-user@localhost:3306
\sql
use social-media-database
select * from user_details;
select * from post;
\quit
/src/main/resources/application.properties Modified
#spring.datasource.url=jdbc:h2:mem:testdb
spring.jpa.show-sql=true
spring.datasource.url=jdbc:mysql://localhost:3306/social-media-database
spring.datasource.username=social-media-user
spring.datasource.password=dummypassword
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


run docker 
 hostport to docker bridge port
 docker run -p 5000:5000 in28min/todo-rest-api-h2:1.0.0.RELEASE

to run instance background
 docker run -p 5000:5000 -d in28min/todo-rest-api-h2:1.0.0.RELEASE

docker container ls-a
docker container prune == remove all stoped container

docker stop == stop all related process
docker kill == stop at same all other prcoess will be as it is


docker run -d ( means detachecd mode.. will run after powe r shell closed)
--restart=always  ==? when ever docker will restart will contianer will restart automaitcally
by default it's no



