openapi: 3.0.1
info:
  title: Student  API
  description: API for managing Students
  version: 1.0.0
paths:
  /teachers:
    get:
      tags: [Teachers]
      summary: Get all teachers
      operationId: getAllTeachers
      responses:
        '200':
          description: List of Teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
    post:
      tags: [Teachers]
      summary: Add a new teacher
      operationId: addTeacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      responses:
        '201':
          description: Teacher added
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Invalid teacher input
  /teachers/{id}:
    get:
      tags: [Teachers]
      summary: Get Teacher by id
      operationId: getTeacherById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Teacher details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '404':
          description: Teacher not found
  /students:
    get:
      tags: [Students]
      summary: Get all students
      operationId: getAllStudents
      responses:
        '200':
          description: List of Students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Add a new student
      tags: [Students]
      operationId: addStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: integer
                format: int64
          description: Student added
        '400':
          description: Invalid student input
  /students/{id}:
    get:
      tags: [Students]
      summary: Get Student by id
      operationId: getStudentById
      parameters:
        - name: id
          in: path
          required: true
          description: id  of the Student
          schema:
            type: integer
            format : int64
      responses:
        '200':
          description: Student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: student not found

components:
  schemas:
    Teacher:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "John Doe"
        department:
          type: string
          example: "science"
        subject:
          type: string
          example: "Mathematics"
        email:
          type: string
          example: "john.doe@example.com"
    Student:
      type: object
      properties:
        id:
          type: number
          example: 12
        name:
          type: string
          example: "Vayu"
        age:
          type: number
          example: 21

        grade:
          type: string
          example: "A"
        email:
          type: string
          example: "any thing about"



